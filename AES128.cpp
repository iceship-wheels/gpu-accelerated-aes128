#include <iostream>
#include <cassert>

#include "AES128.h"

/*
GF(2^8) multiplication
GF(2^8) has multiple primitive polynomials
x^8 + x^4 + x^3 + x + 1 is chosen here
Calculator http://www.ee.unb.ca/cgi-bin/tervo/calc2.pl
*/
uchar gfmul(uchar a, uchar b)
{
    uchar p = 0;
    bool hi_bit_set;
    for (int i = 0; i < 8; i++)
    {
        // add (2^i)*a to p
        if (b & 1)
        {
            p ^= a;
        }
        // calculate (2^(i+1))*a
        // *2 = *(00000010) equals: left shift 1, x^8 = x^4 + x^3 + x + 1
        hi_bit_set = (a & 0x80);
        a <<= 1;
        if (hi_bit_set)
        {
            a ^= 0x1b;
        }
        b >>= 1;
    }
    return p;
}

/*
Tbox is precomputed.

T0(w) = { sbox(w)*2, sbox(w), sbox(w), sbox(w)*3 }
T1(w) = { sbox(w)*3, sbox(w)*2, sbox(w), sbox(w) }
T2(w) = { sbox(w), sbox(w)*3, sbox(w)*2, sbox(w) }
T3(w) = { sbox(w), sbox(w), sbox(w)*3, sbox(w)*2 }

T0_inv(w) = { inv_sbox(w)*e, inv_sbox(w)*9, inv_sbox(w)*d, inv_sbox(w)*b }
T1_inv(w) = { inv_sbox(w)*b, inv_sbox(w)*e, inv_sbox(w)*9, inv_sbox(w)*d }
T2_inv(w) = { inv_sbox(w)*d, inv_sbox(w)*b, inv_sbox(w)*e, inv_sbox(w)*9 }
T3_inv(w) = { inv_sbox(w)*9, inv_sbox(w)*d, inv_sbox(w)*b, inv_sbox(w)*e }
*/
void verify_tbox()
{
    for (int i = 0; i < 256; i++)
    {
        assert(T0[i] == ((gfmul(sbox[i], 0x02) << 24) | (sbox[i] << 16) | (sbox[i] << 8) | gfmul(sbox[i], 0x03)));
        assert(T1[i] == ((gfmul(sbox[i], 0x03) << 24) | (gfmul(sbox[i], 0x02) << 16) | (sbox[i] << 8) | sbox[i]));
        assert(T2[i] == ((sbox[i] << 24) | (gfmul(sbox[i], 0x03) << 16) | (gfmul(sbox[i], 0x02) << 8) | sbox[i]));
        assert(T3[i] == ((sbox[i] << 24) | (sbox[i] << 16) | (gfmul(sbox[i], 0x03) << 8) | gfmul(sbox[i], 0x02)));

        assert(inv_T0[i] == ((gfmul(inv_sbox[i], 0x0e) << 24 | gfmul(inv_sbox[i], 0x09) << 16 | gfmul(inv_sbox[i], 0x0d) << 8 | gfmul(inv_sbox[i], 0x0b))));
        assert(inv_T1[i] == ((gfmul(inv_sbox[i], 0x0b) << 24 | gfmul(inv_sbox[i], 0x0e) << 16 | gfmul(inv_sbox[i], 0x09) << 8 | gfmul(inv_sbox[i], 0x0d))));
        assert(inv_T2[i] == ((gfmul(inv_sbox[i], 0x0d) << 24 | gfmul(inv_sbox[i], 0x0b) << 16 | gfmul(inv_sbox[i], 0x0e) << 8 | gfmul(inv_sbox[i], 0x09))));
        assert(inv_T3[i] == ((gfmul(inv_sbox[i], 0x09) << 24 | gfmul(inv_sbox[i], 0x0d) << 16 | gfmul(inv_sbox[i], 0x0b) << 8 | gfmul(inv_sbox[i], 0x0e))));
    }
    std::cout << "T-box verified." << std::endl;

    // std::cout << "inv_T0[256] = {" << std::endl;
    // for (int i = 0; i < 256; i++)
    // {
    //     if (i % 4 == 0)
    //     {
    //         std::cout << "    ";
    //     }
    //     std::cout << "0x" << std::hex << inv_T0[i] << ", ";
    //     if (i % 4 == 3)
    //     {
    //         std::cout << std::endl;
    //     }
    // }
    // std::cout << "}" << std::endl;

    // std::cout << "inv_T1[256] = {" << std::endl;
    // for (int i = 0; i < 256; i++)
    // {
    //     if (i % 4 == 0)
    //     {
    //         std::cout << "    ";
    //     }
    //     std::cout << "0x" << std::hex << inv_T1[i] << ", ";
    //     if (i % 4 == 3)
    //     {
    //         std::cout << std::endl;
    //     }
    // }
    // std::cout << "}" << std::endl;

    // std::cout << "inv_T2[256] = {" << std::endl;
    // for (int i = 0; i < 256; i++)
    // {
    //     if (i % 4 == 0)
    //     {
    //         std::cout << "    ";
    //     }
    //     std::cout << "0x" << std::hex << inv_T2[i] << ", ";
    //     if (i % 4 == 3)
    //     {
    //         std::cout << std::endl;
    //     }
    // }
    // std::cout << "}" << std::endl;

    // std::cout << "inv_T3[256] = {" << std::endl;
    // for (int i = 0; i < 256; i++)
    // {
    //     if (i % 4 == 0)
    //     {
    //         std::cout << "    ";
    //     }
    //     std::cout << "0x" << std::hex << inv_T3[i] << ", ";
    //     if (i % 4 == 3)
    //     {
    //         std::cout << std::endl;
    //     }
    // }
    // std::cout << "}" << std::endl;
}

/*
s-box is byte->byte lookup table
*/
uchar sbox[256] = {
    0x63,
    0x7c,
    0x77,
    0x7b,
    0xf2,
    0x6b,
    0x6f,
    0xc5,
    0x30,
    0x01,
    0x67,
    0x2b,
    0xfe,
    0xd7,
    0xab,
    0x76,
    0xca,
    0x82,
    0xc9,
    0x7d,
    0xfa,
    0x59,
    0x47,
    0xf0,
    0xad,
    0xd4,
    0xa2,
    0xaf,
    0x9c,
    0xa4,
    0x72,
    0xc0,
    0xb7,
    0xfd,
    0x93,
    0x26,
    0x36,
    0x3f,
    0xf7,
    0xcc,
    0x34,
    0xa5,
    0xe5,
    0xf1,
    0x71,
    0xd8,
    0x31,
    0x15,
    0x04,
    0xc7,
    0x23,
    0xc3,
    0x18,
    0x96,
    0x05,
    0x9a,
    0x07,
    0x12,
    0x80,
    0xe2,
    0xeb,
    0x27,
    0xb2,
    0x75,
    0x09,
    0x83,
    0x2c,
    0x1a,
    0x1b,
    0x6e,
    0x5a,
    0xa0,
    0x52,
    0x3b,
    0xd6,
    0xb3,
    0x29,
    0xe3,
    0x2f,
    0x84,
    0x53,
    0xd1,
    0x00,
    0xed,
    0x20,
    0xfc,
    0xb1,
    0x5b,
    0x6a,
    0xcb,
    0xbe,
    0x39,
    0x4a,
    0x4c,
    0x58,
    0xcf,
    0xd0,
    0xef,
    0xaa,
    0xfb,
    0x43,
    0x4d,
    0x33,
    0x85,
    0x45,
    0xf9,
    0x02,
    0x7f,
    0x50,
    0x3c,
    0x9f,
    0xa8,
    0x51,
    0xa3,
    0x40,
    0x8f,
    0x92,
    0x9d,
    0x38,
    0xf5,
    0xbc,
    0xb6,
    0xda,
    0x21,
    0x10,
    0xff,
    0xf3,
    0xd2,
    0xcd,
    0x0c,
    0x13,
    0xec,
    0x5f,
    0x97,
    0x44,
    0x17,
    0xc4,
    0xa7,
    0x7e,
    0x3d,
    0x64,
    0x5d,
    0x19,
    0x73,
    0x60,
    0x81,
    0x4f,
    0xdc,
    0x22,
    0x2a,
    0x90,
    0x88,
    0x46,
    0xee,
    0xb8,
    0x14,
    0xde,
    0x5e,
    0x0b,
    0xdb,
    0xe0,
    0x32,
    0x3a,
    0x0a,
    0x49,
    0x06,
    0x24,
    0x5c,
    0xc2,
    0xd3,
    0xac,
    0x62,
    0x91,
    0x95,
    0xe4,
    0x79,
    0xe7,
    0xc8,
    0x37,
    0x6d,
    0x8d,
    0xd5,
    0x4e,
    0xa9,
    0x6c,
    0x56,
    0xf4,
    0xea,
    0x65,
    0x7a,
    0xae,
    0x08,
    0xba,
    0x78,
    0x25,
    0x2e,
    0x1c,
    0xa6,
    0xb4,
    0xc6,
    0xe8,
    0xdd,
    0x74,
    0x1f,
    0x4b,
    0xbd,
    0x8b,
    0x8a,
    0x70,
    0x3e,
    0xb5,
    0x66,
    0x48,
    0x03,
    0xf6,
    0x0e,
    0x61,
    0x35,
    0x57,
    0xb9,
    0x86,
    0xc1,
    0x1d,
    0x9e,
    0xe1,
    0xf8,
    0x98,
    0x11,
    0x69,
    0xd9,
    0x8e,
    0x94,
    0x9b,
    0x1e,
    0x87,
    0xe9,
    0xce,
    0x55,
    0x28,
    0xdf,
    0x8c,
    0xa1,
    0x89,
    0x0d,
    0xbf,
    0xe6,
    0x42,
    0x68,
    0x41,
    0x99,
    0x2d,
    0x0f,
    0xb0,
    0x54,
    0xbb,
    0x16};

uchar inv_sbox[256] = {
    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38,
    0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
    0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,
    0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
    0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d,
    0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2,
    0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
    0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,
    0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
    0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,
    0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,
    0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
    0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,
    0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
    0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea,
    0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85,
    0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
    0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,
    0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
    0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20,
    0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31,
    0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
    0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,
    0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
    0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0,
    0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26,
    0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d};

/*
t-box is byte->word lookup table
The following is precomputed t-box
*/

uint32 T0[256] = {
    0xc66363a5U,
    0xf87c7c84U,
    0xee777799U,
    0xf67b7b8dU,
    0xfff2f20dU,
    0xd66b6bbdU,
    0xde6f6fb1U,
    0x91c5c554U,
    0x60303050U,
    0x02010103U,
    0xce6767a9U,
    0x562b2b7dU,
    0xe7fefe19U,
    0xb5d7d762U,
    0x4dababe6U,
    0xec76769aU,
    0x8fcaca45U,
    0x1f82829dU,
    0x89c9c940U,
    0xfa7d7d87U,
    0xeffafa15U,
    0xb25959ebU,
    0x8e4747c9U,
    0xfbf0f00bU,
    0x41adadecU,
    0xb3d4d467U,
    0x5fa2a2fdU,
    0x45afafeaU,
    0x239c9cbfU,
    0x53a4a4f7U,
    0xe4727296U,
    0x9bc0c05bU,
    0x75b7b7c2U,
    0xe1fdfd1cU,
    0x3d9393aeU,
    0x4c26266aU,
    0x6c36365aU,
    0x7e3f3f41U,
    0xf5f7f702U,
    0x83cccc4fU,
    0x6834345cU,
    0x51a5a5f4U,
    0xd1e5e534U,
    0xf9f1f108U,
    0xe2717193U,
    0xabd8d873U,
    0x62313153U,
    0x2a15153fU,
    0x0804040cU,
    0x95c7c752U,
    0x46232365U,
    0x9dc3c35eU,
    0x30181828U,
    0x379696a1U,
    0x0a05050fU,
    0x2f9a9ab5U,
    0x0e070709U,
    0x24121236U,
    0x1b80809bU,
    0xdfe2e23dU,
    0xcdebeb26U,
    0x4e272769U,
    0x7fb2b2cdU,
    0xea75759fU,
    0x1209091bU,
    0x1d83839eU,
    0x582c2c74U,
    0x341a1a2eU,
    0x361b1b2dU,
    0xdc6e6eb2U,
    0xb45a5aeeU,
    0x5ba0a0fbU,
    0xa45252f6U,
    0x763b3b4dU,
    0xb7d6d661U,
    0x7db3b3ceU,
    0x5229297bU,
    0xdde3e33eU,
    0x5e2f2f71U,
    0x13848497U,
    0xa65353f5U,
    0xb9d1d168U,
    0x00000000U,
    0xc1eded2cU,
    0x40202060U,
    0xe3fcfc1fU,
    0x79b1b1c8U,
    0xb65b5bedU,
    0xd46a6abeU,
    0x8dcbcb46U,
    0x67bebed9U,
    0x7239394bU,
    0x944a4adeU,
    0x984c4cd4U,
    0xb05858e8U,
    0x85cfcf4aU,
    0xbbd0d06bU,
    0xc5efef2aU,
    0x4faaaae5U,
    0xedfbfb16U,
    0x864343c5U,
    0x9a4d4dd7U,
    0x66333355U,
    0x11858594U,
    0x8a4545cfU,
    0xe9f9f910U,
    0x04020206U,
    0xfe7f7f81U,
    0xa05050f0U,
    0x783c3c44U,
    0x259f9fbaU,
    0x4ba8a8e3U,
    0xa25151f3U,
    0x5da3a3feU,
    0x804040c0U,
    0x058f8f8aU,
    0x3f9292adU,
    0x219d9dbcU,
    0x70383848U,
    0xf1f5f504U,
    0x63bcbcdfU,
    0x77b6b6c1U,
    0xafdada75U,
    0x42212163U,
    0x20101030U,
    0xe5ffff1aU,
    0xfdf3f30eU,
    0xbfd2d26dU,
    0x81cdcd4cU,
    0x180c0c14U,
    0x26131335U,
    0xc3ecec2fU,
    0xbe5f5fe1U,
    0x359797a2U,
    0x884444ccU,
    0x2e171739U,
    0x93c4c457U,
    0x55a7a7f2U,
    0xfc7e7e82U,
    0x7a3d3d47U,
    0xc86464acU,
    0xba5d5de7U,
    0x3219192bU,
    0xe6737395U,
    0xc06060a0U,
    0x19818198U,
    0x9e4f4fd1U,
    0xa3dcdc7fU,
    0x44222266U,
    0x542a2a7eU,
    0x3b9090abU,
    0x0b888883U,
    0x8c4646caU,
    0xc7eeee29U,
    0x6bb8b8d3U,
    0x2814143cU,
    0xa7dede79U,
    0xbc5e5ee2U,
    0x160b0b1dU,
    0xaddbdb76U,
    0xdbe0e03bU,
    0x64323256U,
    0x743a3a4eU,
    0x140a0a1eU,
    0x924949dbU,
    0x0c06060aU,
    0x4824246cU,
    0xb85c5ce4U,
    0x9fc2c25dU,
    0xbdd3d36eU,
    0x43acacefU,
    0xc46262a6U,
    0x399191a8U,
    0x319595a4U,
    0xd3e4e437U,
    0xf279798bU,
    0xd5e7e732U,
    0x8bc8c843U,
    0x6e373759U,
    0xda6d6db7U,
    0x018d8d8cU,
    0xb1d5d564U,
    0x9c4e4ed2U,
    0x49a9a9e0U,
    0xd86c6cb4U,
    0xac5656faU,
    0xf3f4f407U,
    0xcfeaea25U,
    0xca6565afU,
    0xf47a7a8eU,
    0x47aeaee9U,
    0x10080818U,
    0x6fbabad5U,
    0xf0787888U,
    0x4a25256fU,
    0x5c2e2e72U,
    0x381c1c24U,
    0x57a6a6f1U,
    0x73b4b4c7U,
    0x97c6c651U,
    0xcbe8e823U,
    0xa1dddd7cU,
    0xe874749cU,
    0x3e1f1f21U,
    0x964b4bddU,
    0x61bdbddcU,
    0x0d8b8b86U,
    0x0f8a8a85U,
    0xe0707090U,
    0x7c3e3e42U,
    0x71b5b5c4U,
    0xcc6666aaU,
    0x904848d8U,
    0x06030305U,
    0xf7f6f601U,
    0x1c0e0e12U,
    0xc26161a3U,
    0x6a35355fU,
    0xae5757f9U,
    0x69b9b9d0U,
    0x17868691U,
    0x99c1c158U,
    0x3a1d1d27U,
    0x279e9eb9U,
    0xd9e1e138U,
    0xebf8f813U,
    0x2b9898b3U,
    0x22111133U,
    0xd26969bbU,
    0xa9d9d970U,
    0x078e8e89U,
    0x339494a7U,
    0x2d9b9bb6U,
    0x3c1e1e22U,
    0x15878792U,
    0xc9e9e920U,
    0x87cece49U,
    0xaa5555ffU,
    0x50282878U,
    0xa5dfdf7aU,
    0x038c8c8fU,
    0x59a1a1f8U,
    0x09898980U,
    0x1a0d0d17U,
    0x65bfbfdaU,
    0xd7e6e631U,
    0x844242c6U,
    0xd06868b8U,
    0x824141c3U,
    0x299999b0U,
    0x5a2d2d77U,
    0x1e0f0f11U,
    0x7bb0b0cbU,
    0xa85454fcU,
    0x6dbbbbd6U,
    0x2c16163aU,
};

uint32 T1[256] = {
    0xa5c66363U,
    0x84f87c7cU,
    0x99ee7777U,
    0x8df67b7bU,
    0x0dfff2f2U,
    0xbdd66b6bU,
    0xb1de6f6fU,
    0x5491c5c5U,
    0x50603030U,
    0x03020101U,
    0xa9ce6767U,
    0x7d562b2bU,
    0x19e7fefeU,
    0x62b5d7d7U,
    0xe64dababU,
    0x9aec7676U,
    0x458fcacaU,
    0x9d1f8282U,
    0x4089c9c9U,
    0x87fa7d7dU,
    0x15effafaU,
    0xebb25959U,
    0xc98e4747U,
    0x0bfbf0f0U,
    0xec41adadU,
    0x67b3d4d4U,
    0xfd5fa2a2U,
    0xea45afafU,
    0xbf239c9cU,
    0xf753a4a4U,
    0x96e47272U,
    0x5b9bc0c0U,
    0xc275b7b7U,
    0x1ce1fdfdU,
    0xae3d9393U,
    0x6a4c2626U,
    0x5a6c3636U,
    0x417e3f3fU,
    0x02f5f7f7U,
    0x4f83ccccU,
    0x5c683434U,
    0xf451a5a5U,
    0x34d1e5e5U,
    0x08f9f1f1U,
    0x93e27171U,
    0x73abd8d8U,
    0x53623131U,
    0x3f2a1515U,
    0x0c080404U,
    0x5295c7c7U,
    0x65462323U,
    0x5e9dc3c3U,
    0x28301818U,
    0xa1379696U,
    0x0f0a0505U,
    0xb52f9a9aU,
    0x090e0707U,
    0x36241212U,
    0x9b1b8080U,
    0x3ddfe2e2U,
    0x26cdebebU,
    0x694e2727U,
    0xcd7fb2b2U,
    0x9fea7575U,
    0x1b120909U,
    0x9e1d8383U,
    0x74582c2cU,
    0x2e341a1aU,
    0x2d361b1bU,
    0xb2dc6e6eU,
    0xeeb45a5aU,
    0xfb5ba0a0U,
    0xf6a45252U,
    0x4d763b3bU,
    0x61b7d6d6U,
    0xce7db3b3U,
    0x7b522929U,
    0x3edde3e3U,
    0x715e2f2fU,
    0x97138484U,
    0xf5a65353U,
    0x68b9d1d1U,
    0x00000000U,
    0x2cc1ededU,
    0x60402020U,
    0x1fe3fcfcU,
    0xc879b1b1U,
    0xedb65b5bU,
    0xbed46a6aU,
    0x468dcbcbU,
    0xd967bebeU,
    0x4b723939U,
    0xde944a4aU,
    0xd4984c4cU,
    0xe8b05858U,
    0x4a85cfcfU,
    0x6bbbd0d0U,
    0x2ac5efefU,
    0xe54faaaaU,
    0x16edfbfbU,
    0xc5864343U,
    0xd79a4d4dU,
    0x55663333U,
    0x94118585U,
    0xcf8a4545U,
    0x10e9f9f9U,
    0x06040202U,
    0x81fe7f7fU,
    0xf0a05050U,
    0x44783c3cU,
    0xba259f9fU,
    0xe34ba8a8U,
    0xf3a25151U,
    0xfe5da3a3U,
    0xc0804040U,
    0x8a058f8fU,
    0xad3f9292U,
    0xbc219d9dU,
    0x48703838U,
    0x04f1f5f5U,
    0xdf63bcbcU,
    0xc177b6b6U,
    0x75afdadaU,
    0x63422121U,
    0x30201010U,
    0x1ae5ffffU,
    0x0efdf3f3U,
    0x6dbfd2d2U,
    0x4c81cdcdU,
    0x14180c0cU,
    0x35261313U,
    0x2fc3ececU,
    0xe1be5f5fU,
    0xa2359797U,
    0xcc884444U,
    0x392e1717U,
    0x5793c4c4U,
    0xf255a7a7U,
    0x82fc7e7eU,
    0x477a3d3dU,
    0xacc86464U,
    0xe7ba5d5dU,
    0x2b321919U,
    0x95e67373U,
    0xa0c06060U,
    0x98198181U,
    0xd19e4f4fU,
    0x7fa3dcdcU,
    0x66442222U,
    0x7e542a2aU,
    0xab3b9090U,
    0x830b8888U,
    0xca8c4646U,
    0x29c7eeeeU,
    0xd36bb8b8U,
    0x3c281414U,
    0x79a7dedeU,
    0xe2bc5e5eU,
    0x1d160b0bU,
    0x76addbdbU,
    0x3bdbe0e0U,
    0x56643232U,
    0x4e743a3aU,
    0x1e140a0aU,
    0xdb924949U,
    0x0a0c0606U,
    0x6c482424U,
    0xe4b85c5cU,
    0x5d9fc2c2U,
    0x6ebdd3d3U,
    0xef43acacU,
    0xa6c46262U,
    0xa8399191U,
    0xa4319595U,
    0x37d3e4e4U,
    0x8bf27979U,
    0x32d5e7e7U,
    0x438bc8c8U,
    0x596e3737U,
    0xb7da6d6dU,
    0x8c018d8dU,
    0x64b1d5d5U,
    0xd29c4e4eU,
    0xe049a9a9U,
    0xb4d86c6cU,
    0xfaac5656U,
    0x07f3f4f4U,
    0x25cfeaeaU,
    0xafca6565U,
    0x8ef47a7aU,
    0xe947aeaeU,
    0x18100808U,
    0xd56fbabaU,
    0x88f07878U,
    0x6f4a2525U,
    0x725c2e2eU,
    0x24381c1cU,
    0xf157a6a6U,
    0xc773b4b4U,
    0x5197c6c6U,
    0x23cbe8e8U,
    0x7ca1ddddU,
    0x9ce87474U,
    0x213e1f1fU,
    0xdd964b4bU,
    0xdc61bdbdU,
    0x860d8b8bU,
    0x850f8a8aU,
    0x90e07070U,
    0x427c3e3eU,
    0xc471b5b5U,
    0xaacc6666U,
    0xd8904848U,
    0x05060303U,
    0x01f7f6f6U,
    0x121c0e0eU,
    0xa3c26161U,
    0x5f6a3535U,
    0xf9ae5757U,
    0xd069b9b9U,
    0x91178686U,
    0x5899c1c1U,
    0x273a1d1dU,
    0xb9279e9eU,
    0x38d9e1e1U,
    0x13ebf8f8U,
    0xb32b9898U,
    0x33221111U,
    0xbbd26969U,
    0x70a9d9d9U,
    0x89078e8eU,
    0xa7339494U,
    0xb62d9b9bU,
    0x223c1e1eU,
    0x92158787U,
    0x20c9e9e9U,
    0x4987ceceU,
    0xffaa5555U,
    0x78502828U,
    0x7aa5dfdfU,
    0x8f038c8cU,
    0xf859a1a1U,
    0x80098989U,
    0x171a0d0dU,
    0xda65bfbfU,
    0x31d7e6e6U,
    0xc6844242U,
    0xb8d06868U,
    0xc3824141U,
    0xb0299999U,
    0x775a2d2dU,
    0x111e0f0fU,
    0xcb7bb0b0U,
    0xfca85454U,
    0xd66dbbbbU,
    0x3a2c1616U,
};

uint32 T2[256] = {
    0x63a5c663U,
    0x7c84f87cU,
    0x7799ee77U,
    0x7b8df67bU,
    0xf20dfff2U,
    0x6bbdd66bU,
    0x6fb1de6fU,
    0xc55491c5U,
    0x30506030U,
    0x01030201U,
    0x67a9ce67U,
    0x2b7d562bU,
    0xfe19e7feU,
    0xd762b5d7U,
    0xabe64dabU,
    0x769aec76U,
    0xca458fcaU,
    0x829d1f82U,
    0xc94089c9U,
    0x7d87fa7dU,
    0xfa15effaU,
    0x59ebb259U,
    0x47c98e47U,
    0xf00bfbf0U,
    0xadec41adU,
    0xd467b3d4U,
    0xa2fd5fa2U,
    0xafea45afU,
    0x9cbf239cU,
    0xa4f753a4U,
    0x7296e472U,
    0xc05b9bc0U,
    0xb7c275b7U,
    0xfd1ce1fdU,
    0x93ae3d93U,
    0x266a4c26U,
    0x365a6c36U,
    0x3f417e3fU,
    0xf702f5f7U,
    0xcc4f83ccU,
    0x345c6834U,
    0xa5f451a5U,
    0xe534d1e5U,
    0xf108f9f1U,
    0x7193e271U,
    0xd873abd8U,
    0x31536231U,
    0x153f2a15U,
    0x040c0804U,
    0xc75295c7U,
    0x23654623U,
    0xc35e9dc3U,
    0x18283018U,
    0x96a13796U,
    0x050f0a05U,
    0x9ab52f9aU,
    0x07090e07U,
    0x12362412U,
    0x809b1b80U,
    0xe23ddfe2U,
    0xeb26cdebU,
    0x27694e27U,
    0xb2cd7fb2U,
    0x759fea75U,
    0x091b1209U,
    0x839e1d83U,
    0x2c74582cU,
    0x1a2e341aU,
    0x1b2d361bU,
    0x6eb2dc6eU,
    0x5aeeb45aU,
    0xa0fb5ba0U,
    0x52f6a452U,
    0x3b4d763bU,
    0xd661b7d6U,
    0xb3ce7db3U,
    0x297b5229U,
    0xe33edde3U,
    0x2f715e2fU,
    0x84971384U,
    0x53f5a653U,
    0xd168b9d1U,
    0x00000000U,
    0xed2cc1edU,
    0x20604020U,
    0xfc1fe3fcU,
    0xb1c879b1U,
    0x5bedb65bU,
    0x6abed46aU,
    0xcb468dcbU,
    0xbed967beU,
    0x394b7239U,
    0x4ade944aU,
    0x4cd4984cU,
    0x58e8b058U,
    0xcf4a85cfU,
    0xd06bbbd0U,
    0xef2ac5efU,
    0xaae54faaU,
    0xfb16edfbU,
    0x43c58643U,
    0x4dd79a4dU,
    0x33556633U,
    0x85941185U,
    0x45cf8a45U,
    0xf910e9f9U,
    0x02060402U,
    0x7f81fe7fU,
    0x50f0a050U,
    0x3c44783cU,
    0x9fba259fU,
    0xa8e34ba8U,
    0x51f3a251U,
    0xa3fe5da3U,
    0x40c08040U,
    0x8f8a058fU,
    0x92ad3f92U,
    0x9dbc219dU,
    0x38487038U,
    0xf504f1f5U,
    0xbcdf63bcU,
    0xb6c177b6U,
    0xda75afdaU,
    0x21634221U,
    0x10302010U,
    0xff1ae5ffU,
    0xf30efdf3U,
    0xd26dbfd2U,
    0xcd4c81cdU,
    0x0c14180cU,
    0x13352613U,
    0xec2fc3ecU,
    0x5fe1be5fU,
    0x97a23597U,
    0x44cc8844U,
    0x17392e17U,
    0xc45793c4U,
    0xa7f255a7U,
    0x7e82fc7eU,
    0x3d477a3dU,
    0x64acc864U,
    0x5de7ba5dU,
    0x192b3219U,
    0x7395e673U,
    0x60a0c060U,
    0x81981981U,
    0x4fd19e4fU,
    0xdc7fa3dcU,
    0x22664422U,
    0x2a7e542aU,
    0x90ab3b90U,
    0x88830b88U,
    0x46ca8c46U,
    0xee29c7eeU,
    0xb8d36bb8U,
    0x143c2814U,
    0xde79a7deU,
    0x5ee2bc5eU,
    0x0b1d160bU,
    0xdb76addbU,
    0xe03bdbe0U,
    0x32566432U,
    0x3a4e743aU,
    0x0a1e140aU,
    0x49db9249U,
    0x060a0c06U,
    0x246c4824U,
    0x5ce4b85cU,
    0xc25d9fc2U,
    0xd36ebdd3U,
    0xacef43acU,
    0x62a6c462U,
    0x91a83991U,
    0x95a43195U,
    0xe437d3e4U,
    0x798bf279U,
    0xe732d5e7U,
    0xc8438bc8U,
    0x37596e37U,
    0x6db7da6dU,
    0x8d8c018dU,
    0xd564b1d5U,
    0x4ed29c4eU,
    0xa9e049a9U,
    0x6cb4d86cU,
    0x56faac56U,
    0xf407f3f4U,
    0xea25cfeaU,
    0x65afca65U,
    0x7a8ef47aU,
    0xaee947aeU,
    0x08181008U,
    0xbad56fbaU,
    0x7888f078U,
    0x256f4a25U,
    0x2e725c2eU,
    0x1c24381cU,
    0xa6f157a6U,
    0xb4c773b4U,
    0xc65197c6U,
    0xe823cbe8U,
    0xdd7ca1ddU,
    0x749ce874U,
    0x1f213e1fU,
    0x4bdd964bU,
    0xbddc61bdU,
    0x8b860d8bU,
    0x8a850f8aU,
    0x7090e070U,
    0x3e427c3eU,
    0xb5c471b5U,
    0x66aacc66U,
    0x48d89048U,
    0x03050603U,
    0xf601f7f6U,
    0x0e121c0eU,
    0x61a3c261U,
    0x355f6a35U,
    0x57f9ae57U,
    0xb9d069b9U,
    0x86911786U,
    0xc15899c1U,
    0x1d273a1dU,
    0x9eb9279eU,
    0xe138d9e1U,
    0xf813ebf8U,
    0x98b32b98U,
    0x11332211U,
    0x69bbd269U,
    0xd970a9d9U,
    0x8e89078eU,
    0x94a73394U,
    0x9bb62d9bU,
    0x1e223c1eU,
    0x87921587U,
    0xe920c9e9U,
    0xce4987ceU,
    0x55ffaa55U,
    0x28785028U,
    0xdf7aa5dfU,
    0x8c8f038cU,
    0xa1f859a1U,
    0x89800989U,
    0x0d171a0dU,
    0xbfda65bfU,
    0xe631d7e6U,
    0x42c68442U,
    0x68b8d068U,
    0x41c38241U,
    0x99b02999U,
    0x2d775a2dU,
    0x0f111e0fU,
    0xb0cb7bb0U,
    0x54fca854U,
    0xbbd66dbbU,
    0x163a2c16U,
};

uint32 T3[256] = {
    0x6363a5c6U,
    0x7c7c84f8U,
    0x777799eeU,
    0x7b7b8df6U,
    0xf2f20dffU,
    0x6b6bbdd6U,
    0x6f6fb1deU,
    0xc5c55491U,
    0x30305060U,
    0x01010302U,
    0x6767a9ceU,
    0x2b2b7d56U,
    0xfefe19e7U,
    0xd7d762b5U,
    0xababe64dU,
    0x76769aecU,
    0xcaca458fU,
    0x82829d1fU,
    0xc9c94089U,
    0x7d7d87faU,
    0xfafa15efU,
    0x5959ebb2U,
    0x4747c98eU,
    0xf0f00bfbU,
    0xadadec41U,
    0xd4d467b3U,
    0xa2a2fd5fU,
    0xafafea45U,
    0x9c9cbf23U,
    0xa4a4f753U,
    0x727296e4U,
    0xc0c05b9bU,
    0xb7b7c275U,
    0xfdfd1ce1U,
    0x9393ae3dU,
    0x26266a4cU,
    0x36365a6cU,
    0x3f3f417eU,
    0xf7f702f5U,
    0xcccc4f83U,
    0x34345c68U,
    0xa5a5f451U,
    0xe5e534d1U,
    0xf1f108f9U,
    0x717193e2U,
    0xd8d873abU,
    0x31315362U,
    0x15153f2aU,
    0x04040c08U,
    0xc7c75295U,
    0x23236546U,
    0xc3c35e9dU,
    0x18182830U,
    0x9696a137U,
    0x05050f0aU,
    0x9a9ab52fU,
    0x0707090eU,
    0x12123624U,
    0x80809b1bU,
    0xe2e23ddfU,
    0xebeb26cdU,
    0x2727694eU,
    0xb2b2cd7fU,
    0x75759feaU,
    0x09091b12U,
    0x83839e1dU,
    0x2c2c7458U,
    0x1a1a2e34U,
    0x1b1b2d36U,
    0x6e6eb2dcU,
    0x5a5aeeb4U,
    0xa0a0fb5bU,
    0x5252f6a4U,
    0x3b3b4d76U,
    0xd6d661b7U,
    0xb3b3ce7dU,
    0x29297b52U,
    0xe3e33eddU,
    0x2f2f715eU,
    0x84849713U,
    0x5353f5a6U,
    0xd1d168b9U,
    0x00000000U,
    0xeded2cc1U,
    0x20206040U,
    0xfcfc1fe3U,
    0xb1b1c879U,
    0x5b5bedb6U,
    0x6a6abed4U,
    0xcbcb468dU,
    0xbebed967U,
    0x39394b72U,
    0x4a4ade94U,
    0x4c4cd498U,
    0x5858e8b0U,
    0xcfcf4a85U,
    0xd0d06bbbU,
    0xefef2ac5U,
    0xaaaae54fU,
    0xfbfb16edU,
    0x4343c586U,
    0x4d4dd79aU,
    0x33335566U,
    0x85859411U,
    0x4545cf8aU,
    0xf9f910e9U,
    0x02020604U,
    0x7f7f81feU,
    0x5050f0a0U,
    0x3c3c4478U,
    0x9f9fba25U,
    0xa8a8e34bU,
    0x5151f3a2U,
    0xa3a3fe5dU,
    0x4040c080U,
    0x8f8f8a05U,
    0x9292ad3fU,
    0x9d9dbc21U,
    0x38384870U,
    0xf5f504f1U,
    0xbcbcdf63U,
    0xb6b6c177U,
    0xdada75afU,
    0x21216342U,
    0x10103020U,
    0xffff1ae5U,
    0xf3f30efdU,
    0xd2d26dbfU,
    0xcdcd4c81U,
    0x0c0c1418U,
    0x13133526U,
    0xecec2fc3U,
    0x5f5fe1beU,
    0x9797a235U,
    0x4444cc88U,
    0x1717392eU,
    0xc4c45793U,
    0xa7a7f255U,
    0x7e7e82fcU,
    0x3d3d477aU,
    0x6464acc8U,
    0x5d5de7baU,
    0x19192b32U,
    0x737395e6U,
    0x6060a0c0U,
    0x81819819U,
    0x4f4fd19eU,
    0xdcdc7fa3U,
    0x22226644U,
    0x2a2a7e54U,
    0x9090ab3bU,
    0x8888830bU,
    0x4646ca8cU,
    0xeeee29c7U,
    0xb8b8d36bU,
    0x14143c28U,
    0xdede79a7U,
    0x5e5ee2bcU,
    0x0b0b1d16U,
    0xdbdb76adU,
    0xe0e03bdbU,
    0x32325664U,
    0x3a3a4e74U,
    0x0a0a1e14U,
    0x4949db92U,
    0x06060a0cU,
    0x24246c48U,
    0x5c5ce4b8U,
    0xc2c25d9fU,
    0xd3d36ebdU,
    0xacacef43U,
    0x6262a6c4U,
    0x9191a839U,
    0x9595a431U,
    0xe4e437d3U,
    0x79798bf2U,
    0xe7e732d5U,
    0xc8c8438bU,
    0x3737596eU,
    0x6d6db7daU,
    0x8d8d8c01U,
    0xd5d564b1U,
    0x4e4ed29cU,
    0xa9a9e049U,
    0x6c6cb4d8U,
    0x5656faacU,
    0xf4f407f3U,
    0xeaea25cfU,
    0x6565afcaU,
    0x7a7a8ef4U,
    0xaeaee947U,
    0x08081810U,
    0xbabad56fU,
    0x787888f0U,
    0x25256f4aU,
    0x2e2e725cU,
    0x1c1c2438U,
    0xa6a6f157U,
    0xb4b4c773U,
    0xc6c65197U,
    0xe8e823cbU,
    0xdddd7ca1U,
    0x74749ce8U,
    0x1f1f213eU,
    0x4b4bdd96U,
    0xbdbddc61U,
    0x8b8b860dU,
    0x8a8a850fU,
    0x707090e0U,
    0x3e3e427cU,
    0xb5b5c471U,
    0x6666aaccU,
    0x4848d890U,
    0x03030506U,
    0xf6f601f7U,
    0x0e0e121cU,
    0x6161a3c2U,
    0x35355f6aU,
    0x5757f9aeU,
    0xb9b9d069U,
    0x86869117U,
    0xc1c15899U,
    0x1d1d273aU,
    0x9e9eb927U,
    0xe1e138d9U,
    0xf8f813ebU,
    0x9898b32bU,
    0x11113322U,
    0x6969bbd2U,
    0xd9d970a9U,
    0x8e8e8907U,
    0x9494a733U,
    0x9b9bb62dU,
    0x1e1e223cU,
    0x87879215U,
    0xe9e920c9U,
    0xcece4987U,
    0x5555ffaaU,
    0x28287850U,
    0xdfdf7aa5U,
    0x8c8c8f03U,
    0xa1a1f859U,
    0x89898009U,
    0x0d0d171aU,
    0xbfbfda65U,
    0xe6e631d7U,
    0x4242c684U,
    0x6868b8d0U,
    0x4141c382U,
    0x9999b029U,
    0x2d2d775aU,
    0x0f0f111eU,
    0xb0b0cb7bU,
    0x5454fca8U,
    0xbbbbd66dU,
    0x16163a2cU,
};

uint32 inv_T0[256] = {
    0x51f4a750,
    0x7e416553,
    0x1a17a4c3,
    0x3a275e96,
    0x3bab6bcb,
    0x1f9d45f1,
    0xacfa58ab,
    0x4be30393,
    0x2030fa55,
    0xad766df6,
    0x88cc7691,
    0xf5024c25,
    0x4fe5d7fc,
    0xc52acbd7,
    0x26354480,
    0xb562a38f,
    0xdeb15a49,
    0x25ba1b67,
    0x45ea0e98,
    0x5dfec0e1,
    0xc32f7502,
    0x814cf012,
    0x8d4697a3,
    0x6bd3f9c6,
    0x38f5fe7,
    0x15929c95,
    0xbf6d7aeb,
    0x955259da,
    0xd4be832d,
    0x587421d3,
    0x49e06929,
    0x8ec9c844,
    0x75c2896a,
    0xf48e7978,
    0x99583e6b,
    0x27b971dd,
    0xbee14fb6,
    0xf088ad17,
    0xc920ac66,
    0x7dce3ab4,
    0x63df4a18,
    0xe51a3182,
    0x97513360,
    0x62537f45,
    0xb16477e0,
    0xbb6bae84,
    0xfe81a01c,
    0xf9082b94,
    0x70486858,
    0x8f45fd19,
    0x94de6c87,
    0x527bf8b7,
    0xab73d323,
    0x724b02e2,
    0xe31f8f57,
    0x6655ab2a,
    0xb2eb2807,
    0x2fb5c203,
    0x86c57b9a,
    0xd33708a5,
    0x302887f2,
    0x23bfa5b2,
    0x2036aba,
    0xed16825c,
    0x8acf1c2b,
    0xa779b492,
    0xf307f2f0,
    0x4e69e2a1,
    0x65daf4cd,
    0x605bed5,
    0xd134621f,
    0xc4a6fe8a,
    0x342e539d,
    0xa2f355a0,
    0x58ae132,
    0xa4f6eb75,
    0xb83ec39,
    0x4060efaa,
    0x5e719f06,
    0xbd6e1051,
    0x3e218af9,
    0x96dd063d,
    0xdd3e05ae,
    0x4de6bd46,
    0x91548db5,
    0x71c45d05,
    0x406d46f,
    0x605015ff,
    0x1998fb24,
    0xd6bde997,
    0x894043cc,
    0x67d99e77,
    0xb0e842bd,
    0x7898b88,
    0xe7195b38,
    0x79c8eedb,
    0xa17c0a47,
    0x7c420fe9,
    0xf8841ec9,
    0x0,
    0x9808683,
    0x322bed48,
    0x1e1170ac,
    0x6c5a724e,
    0xfd0efffb,
    0xf853856,
    0x3daed51e,
    0x362d3927,
    0xa0fd964,
    0x685ca621,
    0x9b5b54d1,
    0x24362e3a,
    0xc0a67b1,
    0x9357e70f,
    0xb4ee96d2,
    0x1b9b919e,
    0x80c0c54f,
    0x61dc20a2,
    0x5a774b69,
    0x1c121a16,
    0xe293ba0a,
    0xc0a02ae5,
    0x3c22e043,
    0x121b171d,
    0xe090d0b,
    0xf28bc7ad,
    0x2db6a8b9,
    0x141ea9c8,
    0x57f11985,
    0xaf75074c,
    0xee99ddbb,
    0xa37f60fd,
    0xf701269f,
    0x5c72f5bc,
    0x44663bc5,
    0x5bfb7e34,
    0x8b432976,
    0xcb23c6dc,
    0xb6edfc68,
    0xb8e4f163,
    0xd731dcca,
    0x42638510,
    0x13972240,
    0x84c61120,
    0x854a247d,
    0xd2bb3df8,
    0xaef93211,
    0xc729a16d,
    0x1d9e2f4b,
    0xdcb230f3,
    0xd8652ec,
    0x77c1e3d0,
    0x2bb3166c,
    0xa970b999,
    0x119448fa,
    0x47e96422,
    0xa8fc8cc4,
    0xa0f03f1a,
    0x567d2cd8,
    0x223390ef,
    0x87494ec7,
    0xd938d1c1,
    0x8ccaa2fe,
    0x98d40b36,
    0xa6f581cf,
    0xa57ade28,
    0xdab78e26,
    0x3fadbfa4,
    0x2c3a9de4,
    0x5078920d,
    0x6a5fcc9b,
    0x547e4662,
    0xf68d13c2,
    0x90d8b8e8,
    0x2e39f75e,
    0x82c3aff5,
    0x9f5d80be,
    0x69d0937c,
    0x6fd52da9,
    0xcf2512b3,
    0xc8ac993b,
    0x10187da7,
    0xe89c636e,
    0xdb3bbb7b,
    0xcd267809,
    0x6e5918f4,
    0xec9ab701,
    0x834f9aa8,
    0xe6956e65,
    0xaaffe67e,
    0x21bccf08,
    0xef15e8e6,
    0xbae79bd9,
    0x4a6f36ce,
    0xea9f09d4,
    0x29b07cd6,
    0x31a4b2af,
    0x2a3f2331,
    0xc6a59430,
    0x35a266c0,
    0x744ebc37,
    0xfc82caa6,
    0xe090d0b0,
    0x33a7d815,
    0xf104984a,
    0x41ecdaf7,
    0x7fcd500e,
    0x1791f62f,
    0x764dd68d,
    0x43efb04d,
    0xccaa4d54,
    0xe49604df,
    0x9ed1b5e3,
    0x4c6a881b,
    0xc12c1fb8,
    0x4665517f,
    0x9d5eea04,
    0x18c355d,
    0xfa877473,
    0xfb0b412e,
    0xb3671d5a,
    0x92dbd252,
    0xe9105633,
    0x6dd64713,
    0x9ad7618c,
    0x37a10c7a,
    0x59f8148e,
    0xeb133c89,
    0xcea927ee,
    0xb761c935,
    0xe11ce5ed,
    0x7a47b13c,
    0x9cd2df59,
    0x55f2733f,
    0x1814ce79,
    0x73c737bf,
    0x53f7cdea,
    0x5ffdaa5b,
    0xdf3d6f14,
    0x7844db86,
    0xcaaff381,
    0xb968c43e,
    0x3824342c,
    0xc2a3405f,
    0x161dc372,
    0xbce2250c,
    0x283c498b,
    0xff0d9541,
    0x39a80171,
    0x80cb3de,
    0xd8b4e49c,
    0x6456c190,
    0x7bcb8461,
    0xd532b670,
    0x486c5c74,
    0xd0b85742,
};

uint32 inv_T1[256] = {
    0x5051f4a7,
    0x537e4165,
    0xc31a17a4,
    0x963a275e,
    0xcb3bab6b,
    0xf11f9d45,
    0xabacfa58,
    0x934be303,
    0x552030fa,
    0xf6ad766d,
    0x9188cc76,
    0x25f5024c,
    0xfc4fe5d7,
    0xd7c52acb,
    0x80263544,
    0x8fb562a3,
    0x49deb15a,
    0x6725ba1b,
    0x9845ea0e,
    0xe15dfec0,
    0x2c32f75,
    0x12814cf0,
    0xa38d4697,
    0xc66bd3f9,
    0xe7038f5f,
    0x9515929c,
    0xebbf6d7a,
    0xda955259,
    0x2dd4be83,
    0xd3587421,
    0x2949e069,
    0x448ec9c8,
    0x6a75c289,
    0x78f48e79,
    0x6b99583e,
    0xdd27b971,
    0xb6bee14f,
    0x17f088ad,
    0x66c920ac,
    0xb47dce3a,
    0x1863df4a,
    0x82e51a31,
    0x60975133,
    0x4562537f,
    0xe0b16477,
    0x84bb6bae,
    0x1cfe81a0,
    0x94f9082b,
    0x58704868,
    0x198f45fd,
    0x8794de6c,
    0xb7527bf8,
    0x23ab73d3,
    0xe2724b02,
    0x57e31f8f,
    0x2a6655ab,
    0x7b2eb28,
    0x32fb5c2,
    0x9a86c57b,
    0xa5d33708,
    0xf2302887,
    0xb223bfa5,
    0xba02036a,
    0x5ced1682,
    0x2b8acf1c,
    0x92a779b4,
    0xf0f307f2,
    0xa14e69e2,
    0xcd65daf4,
    0xd50605be,
    0x1fd13462,
    0x8ac4a6fe,
    0x9d342e53,
    0xa0a2f355,
    0x32058ae1,
    0x75a4f6eb,
    0x390b83ec,
    0xaa4060ef,
    0x65e719f,
    0x51bd6e10,
    0xf93e218a,
    0x3d96dd06,
    0xaedd3e05,
    0x464de6bd,
    0xb591548d,
    0x571c45d,
    0x6f0406d4,
    0xff605015,
    0x241998fb,
    0x97d6bde9,
    0xcc894043,
    0x7767d99e,
    0xbdb0e842,
    0x8807898b,
    0x38e7195b,
    0xdb79c8ee,
    0x47a17c0a,
    0xe97c420f,
    0xc9f8841e,
    0x0,
    0x83098086,
    0x48322bed,
    0xac1e1170,
    0x4e6c5a72,
    0xfbfd0eff,
    0x560f8538,
    0x1e3daed5,
    0x27362d39,
    0x640a0fd9,
    0x21685ca6,
    0xd19b5b54,
    0x3a24362e,
    0xb10c0a67,
    0xf9357e7,
    0xd2b4ee96,
    0x9e1b9b91,
    0x4f80c0c5,
    0xa261dc20,
    0x695a774b,
    0x161c121a,
    0xae293ba,
    0xe5c0a02a,
    0x433c22e0,
    0x1d121b17,
    0xb0e090d,
    0xadf28bc7,
    0xb92db6a8,
    0xc8141ea9,
    0x8557f119,
    0x4caf7507,
    0xbbee99dd,
    0xfda37f60,
    0x9ff70126,
    0xbc5c72f5,
    0xc544663b,
    0x345bfb7e,
    0x768b4329,
    0xdccb23c6,
    0x68b6edfc,
    0x63b8e4f1,
    0xcad731dc,
    0x10426385,
    0x40139722,
    0x2084c611,
    0x7d854a24,
    0xf8d2bb3d,
    0x11aef932,
    0x6dc729a1,
    0x4b1d9e2f,
    0xf3dcb230,
    0xec0d8652,
    0xd077c1e3,
    0x6c2bb316,
    0x99a970b9,
    0xfa119448,
    0x2247e964,
    0xc4a8fc8c,
    0x1aa0f03f,
    0xd8567d2c,
    0xef223390,
    0xc787494e,
    0xc1d938d1,
    0xfe8ccaa2,
    0x3698d40b,
    0xcfa6f581,
    0x28a57ade,
    0x26dab78e,
    0xa43fadbf,
    0xe42c3a9d,
    0xd507892,
    0x9b6a5fcc,
    0x62547e46,
    0xc2f68d13,
    0xe890d8b8,
    0x5e2e39f7,
    0xf582c3af,
    0xbe9f5d80,
    0x7c69d093,
    0xa96fd52d,
    0xb3cf2512,
    0x3bc8ac99,
    0xa710187d,
    0x6ee89c63,
    0x7bdb3bbb,
    0x9cd2678,
    0xf46e5918,
    0x1ec9ab7,
    0xa8834f9a,
    0x65e6956e,
    0x7eaaffe6,
    0x821bccf,
    0xe6ef15e8,
    0xd9bae79b,
    0xce4a6f36,
    0xd4ea9f09,
    0xd629b07c,
    0xaf31a4b2,
    0x312a3f23,
    0x30c6a594,
    0xc035a266,
    0x37744ebc,
    0xa6fc82ca,
    0xb0e090d0,
    0x1533a7d8,
    0x4af10498,
    0xf741ecda,
    0xe7fcd50,
    0x2f1791f6,
    0x8d764dd6,
    0x4d43efb0,
    0x54ccaa4d,
    0xdfe49604,
    0xe39ed1b5,
    0x1b4c6a88,
    0xb8c12c1f,
    0x7f466551,
    0x49d5eea,
    0x5d018c35,
    0x73fa8774,
    0x2efb0b41,
    0x5ab3671d,
    0x5292dbd2,
    0x33e91056,
    0x136dd647,
    0x8c9ad761,
    0x7a37a10c,
    0x8e59f814,
    0x89eb133c,
    0xeecea927,
    0x35b761c9,
    0xede11ce5,
    0x3c7a47b1,
    0x599cd2df,
    0x3f55f273,
    0x791814ce,
    0xbf73c737,
    0xea53f7cd,
    0x5b5ffdaa,
    0x14df3d6f,
    0x867844db,
    0x81caaff3,
    0x3eb968c4,
    0x2c382434,
    0x5fc2a340,
    0x72161dc3,
    0xcbce225,
    0x8b283c49,
    0x41ff0d95,
    0x7139a801,
    0xde080cb3,
    0x9cd8b4e4,
    0x906456c1,
    0x617bcb84,
    0x70d532b6,
    0x74486c5c,
    0x42d0b857,
};

uint32 inv_T2[256] = {
    0xa75051f4,
    0x65537e41,
    0xa4c31a17,
    0x5e963a27,
    0x6bcb3bab,
    0x45f11f9d,
    0x58abacfa,
    0x3934be3,
    0xfa552030,
    0x6df6ad76,
    0x769188cc,
    0x4c25f502,
    0xd7fc4fe5,
    0xcbd7c52a,
    0x44802635,
    0xa38fb562,
    0x5a49deb1,
    0x1b6725ba,
    0xe9845ea,
    0xc0e15dfe,
    0x7502c32f,
    0xf012814c,
    0x97a38d46,
    0xf9c66bd3,
    0x5fe7038f,
    0x9c951592,
    0x7aebbf6d,
    0x59da9552,
    0x832dd4be,
    0x21d35874,
    0x692949e0,
    0xc8448ec9,
    0x896a75c2,
    0x7978f48e,
    0x3e6b9958,
    0x71dd27b9,
    0x4fb6bee1,
    0xad17f088,
    0xac66c920,
    0x3ab47dce,
    0x4a1863df,
    0x3182e51a,
    0x33609751,
    0x7f456253,
    0x77e0b164,
    0xae84bb6b,
    0xa01cfe81,
    0x2b94f908,
    0x68587048,
    0xfd198f45,
    0x6c8794de,
    0xf8b7527b,
    0xd323ab73,
    0x2e2724b,
    0x8f57e31f,
    0xab2a6655,
    0x2807b2eb,
    0xc2032fb5,
    0x7b9a86c5,
    0x8a5d337,
    0x87f23028,
    0xa5b223bf,
    0x6aba0203,
    0x825ced16,
    0x1c2b8acf,
    0xb492a779,
    0xf2f0f307,
    0xe2a14e69,
    0xf4cd65da,
    0xbed50605,
    0x621fd134,
    0xfe8ac4a6,
    0x539d342e,
    0x55a0a2f3,
    0xe132058a,
    0xeb75a4f6,
    0xec390b83,
    0xefaa4060,
    0x9f065e71,
    0x1051bd6e,
    0x8af93e21,
    0x63d96dd,
    0x5aedd3e,
    0xbd464de6,
    0x8db59154,
    0x5d0571c4,
    0xd46f0406,
    0x15ff6050,
    0xfb241998,
    0xe997d6bd,
    0x43cc8940,
    0x9e7767d9,
    0x42bdb0e8,
    0x8b880789,
    0x5b38e719,
    0xeedb79c8,
    0xa47a17c,
    0xfe97c42,
    0x1ec9f884,
    0x0,
    0x86830980,
    0xed48322b,
    0x70ac1e11,
    0x724e6c5a,
    0xfffbfd0e,
    0x38560f85,
    0xd51e3dae,
    0x3927362d,
    0xd9640a0f,
    0xa621685c,
    0x54d19b5b,
    0x2e3a2436,
    0x67b10c0a,
    0xe70f9357,
    0x96d2b4ee,
    0x919e1b9b,
    0xc54f80c0,
    0x20a261dc,
    0x4b695a77,
    0x1a161c12,
    0xba0ae293,
    0x2ae5c0a0,
    0xe0433c22,
    0x171d121b,
    0xd0b0e09,
    0xc7adf28b,
    0xa8b92db6,
    0xa9c8141e,
    0x198557f1,
    0x74caf75,
    0xddbbee99,
    0x60fda37f,
    0x269ff701,
    0xf5bc5c72,
    0x3bc54466,
    0x7e345bfb,
    0x29768b43,
    0xc6dccb23,
    0xfc68b6ed,
    0xf163b8e4,
    0xdccad731,
    0x85104263,
    0x22401397,
    0x112084c6,
    0x247d854a,
    0x3df8d2bb,
    0x3211aef9,
    0xa16dc729,
    0x2f4b1d9e,
    0x30f3dcb2,
    0x52ec0d86,
    0xe3d077c1,
    0x166c2bb3,
    0xb999a970,
    0x48fa1194,
    0x642247e9,
    0x8cc4a8fc,
    0x3f1aa0f0,
    0x2cd8567d,
    0x90ef2233,
    0x4ec78749,
    0xd1c1d938,
    0xa2fe8cca,
    0xb3698d4,
    0x81cfa6f5,
    0xde28a57a,
    0x8e26dab7,
    0xbfa43fad,
    0x9de42c3a,
    0x920d5078,
    0xcc9b6a5f,
    0x4662547e,
    0x13c2f68d,
    0xb8e890d8,
    0xf75e2e39,
    0xaff582c3,
    0x80be9f5d,
    0x937c69d0,
    0x2da96fd5,
    0x12b3cf25,
    0x993bc8ac,
    0x7da71018,
    0x636ee89c,
    0xbb7bdb3b,
    0x7809cd26,
    0x18f46e59,
    0xb701ec9a,
    0x9aa8834f,
    0x6e65e695,
    0xe67eaaff,
    0xcf0821bc,
    0xe8e6ef15,
    0x9bd9bae7,
    0x36ce4a6f,
    0x9d4ea9f,
    0x7cd629b0,
    0xb2af31a4,
    0x23312a3f,
    0x9430c6a5,
    0x66c035a2,
    0xbc37744e,
    0xcaa6fc82,
    0xd0b0e090,
    0xd81533a7,
    0x984af104,
    0xdaf741ec,
    0x500e7fcd,
    0xf62f1791,
    0xd68d764d,
    0xb04d43ef,
    0x4d54ccaa,
    0x4dfe496,
    0xb5e39ed1,
    0x881b4c6a,
    0x1fb8c12c,
    0x517f4665,
    0xea049d5e,
    0x355d018c,
    0x7473fa87,
    0x412efb0b,
    0x1d5ab367,
    0xd25292db,
    0x5633e910,
    0x47136dd6,
    0x618c9ad7,
    0xc7a37a1,
    0x148e59f8,
    0x3c89eb13,
    0x27eecea9,
    0xc935b761,
    0xe5ede11c,
    0xb13c7a47,
    0xdf599cd2,
    0x733f55f2,
    0xce791814,
    0x37bf73c7,
    0xcdea53f7,
    0xaa5b5ffd,
    0x6f14df3d,
    0xdb867844,
    0xf381caaf,
    0xc43eb968,
    0x342c3824,
    0x405fc2a3,
    0xc372161d,
    0x250cbce2,
    0x498b283c,
    0x9541ff0d,
    0x17139a8,
    0xb3de080c,
    0xe49cd8b4,
    0xc1906456,
    0x84617bcb,
    0xb670d532,
    0x5c74486c,
    0x5742d0b8,
};

uint32 inv_T3[256] = {
    0xf4a75051,
    0x4165537e,
    0x17a4c31a,
    0x275e963a,
    0xab6bcb3b,
    0x9d45f11f,
    0xfa58abac,
    0xe303934b,
    0x30fa5520,
    0x766df6ad,
    0xcc769188,
    0x24c25f5,
    0xe5d7fc4f,
    0x2acbd7c5,
    0x35448026,
    0x62a38fb5,
    0xb15a49de,
    0xba1b6725,
    0xea0e9845,
    0xfec0e15d,
    0x2f7502c3,
    0x4cf01281,
    0x4697a38d,
    0xd3f9c66b,
    0x8f5fe703,
    0x929c9515,
    0x6d7aebbf,
    0x5259da95,
    0xbe832dd4,
    0x7421d358,
    0xe0692949,
    0xc9c8448e,
    0xc2896a75,
    0x8e7978f4,
    0x583e6b99,
    0xb971dd27,
    0xe14fb6be,
    0x88ad17f0,
    0x20ac66c9,
    0xce3ab47d,
    0xdf4a1863,
    0x1a3182e5,
    0x51336097,
    0x537f4562,
    0x6477e0b1,
    0x6bae84bb,
    0x81a01cfe,
    0x82b94f9,
    0x48685870,
    0x45fd198f,
    0xde6c8794,
    0x7bf8b752,
    0x73d323ab,
    0x4b02e272,
    0x1f8f57e3,
    0x55ab2a66,
    0xeb2807b2,
    0xb5c2032f,
    0xc57b9a86,
    0x3708a5d3,
    0x2887f230,
    0xbfa5b223,
    0x36aba02,
    0x16825ced,
    0xcf1c2b8a,
    0x79b492a7,
    0x7f2f0f3,
    0x69e2a14e,
    0xdaf4cd65,
    0x5bed506,
    0x34621fd1,
    0xa6fe8ac4,
    0x2e539d34,
    0xf355a0a2,
    0x8ae13205,
    0xf6eb75a4,
    0x83ec390b,
    0x60efaa40,
    0x719f065e,
    0x6e1051bd,
    0x218af93e,
    0xdd063d96,
    0x3e05aedd,
    0xe6bd464d,
    0x548db591,
    0xc45d0571,
    0x6d46f04,
    0x5015ff60,
    0x98fb2419,
    0xbde997d6,
    0x4043cc89,
    0xd99e7767,
    0xe842bdb0,
    0x898b8807,
    0x195b38e7,
    0xc8eedb79,
    0x7c0a47a1,
    0x420fe97c,
    0x841ec9f8,
    0x0,
    0x80868309,
    0x2bed4832,
    0x1170ac1e,
    0x5a724e6c,
    0xefffbfd,
    0x8538560f,
    0xaed51e3d,
    0x2d392736,
    0xfd9640a,
    0x5ca62168,
    0x5b54d19b,
    0x362e3a24,
    0xa67b10c,
    0x57e70f93,
    0xee96d2b4,
    0x9b919e1b,
    0xc0c54f80,
    0xdc20a261,
    0x774b695a,
    0x121a161c,
    0x93ba0ae2,
    0xa02ae5c0,
    0x22e0433c,
    0x1b171d12,
    0x90d0b0e,
    0x8bc7adf2,
    0xb6a8b92d,
    0x1ea9c814,
    0xf1198557,
    0x75074caf,
    0x99ddbbee,
    0x7f60fda3,
    0x1269ff7,
    0x72f5bc5c,
    0x663bc544,
    0xfb7e345b,
    0x4329768b,
    0x23c6dccb,
    0xedfc68b6,
    0xe4f163b8,
    0x31dccad7,
    0x63851042,
    0x97224013,
    0xc6112084,
    0x4a247d85,
    0xbb3df8d2,
    0xf93211ae,
    0x29a16dc7,
    0x9e2f4b1d,
    0xb230f3dc,
    0x8652ec0d,
    0xc1e3d077,
    0xb3166c2b,
    0x70b999a9,
    0x9448fa11,
    0xe9642247,
    0xfc8cc4a8,
    0xf03f1aa0,
    0x7d2cd856,
    0x3390ef22,
    0x494ec787,
    0x38d1c1d9,
    0xcaa2fe8c,
    0xd40b3698,
    0xf581cfa6,
    0x7ade28a5,
    0xb78e26da,
    0xadbfa43f,
    0x3a9de42c,
    0x78920d50,
    0x5fcc9b6a,
    0x7e466254,
    0x8d13c2f6,
    0xd8b8e890,
    0x39f75e2e,
    0xc3aff582,
    0x5d80be9f,
    0xd0937c69,
    0xd52da96f,
    0x2512b3cf,
    0xac993bc8,
    0x187da710,
    0x9c636ee8,
    0x3bbb7bdb,
    0x267809cd,
    0x5918f46e,
    0x9ab701ec,
    0x4f9aa883,
    0x956e65e6,
    0xffe67eaa,
    0xbccf0821,
    0x15e8e6ef,
    0xe79bd9ba,
    0x6f36ce4a,
    0x9f09d4ea,
    0xb07cd629,
    0xa4b2af31,
    0x3f23312a,
    0xa59430c6,
    0xa266c035,
    0x4ebc3774,
    0x82caa6fc,
    0x90d0b0e0,
    0xa7d81533,
    0x4984af1,
    0xecdaf741,
    0xcd500e7f,
    0x91f62f17,
    0x4dd68d76,
    0xefb04d43,
    0xaa4d54cc,
    0x9604dfe4,
    0xd1b5e39e,
    0x6a881b4c,
    0x2c1fb8c1,
    0x65517f46,
    0x5eea049d,
    0x8c355d01,
    0x877473fa,
    0xb412efb,
    0x671d5ab3,
    0xdbd25292,
    0x105633e9,
    0xd647136d,
    0xd7618c9a,
    0xa10c7a37,
    0xf8148e59,
    0x133c89eb,
    0xa927eece,
    0x61c935b7,
    0x1ce5ede1,
    0x47b13c7a,
    0xd2df599c,
    0xf2733f55,
    0x14ce7918,
    0xc737bf73,
    0xf7cdea53,
    0xfdaa5b5f,
    0x3d6f14df,
    0x44db8678,
    0xaff381ca,
    0x68c43eb9,
    0x24342c38,
    0xa3405fc2,
    0x1dc37216,
    0xe2250cbc,
    0x3c498b28,
    0xd9541ff,
    0xa8017139,
    0xcb3de08,
    0xb4e49cd8,
    0x56c19064,
    0xcb84617b,
    0x32b670d5,
    0x6c5c7448,
    0xb85742d0,
};